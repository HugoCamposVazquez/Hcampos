// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: dbHGYj6bAT5a9puw4ZPFAE
// Component: EEEJ5WMuY1cN
import * as React from "react";

import * as p from "@plasmicapp/react-web";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Divider from "../../Divider"; // plasmic-import: 4nJSUNUrt-9u/component
import Valueprop from "../../Valueprop"; // plasmic-import: iqLVo_SBs1q1/component
import Button from "../../Button"; // plasmic-import: tW89Zefd9lZn/component

import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_landing_page_starter.module.css"; // plasmic-import: dbHGYj6bAT5a9puw4ZPFAE/projectcss
import * as sty from "./PlasmicPricingSection3.module.css"; // plasmic-import: EEEJ5WMuY1cN/css

import Icon14Icon from "./icons/PlasmicIcon__Icon14"; // plasmic-import: wbpeHCM_Sln2/icon
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: qMBAqKPwaUKX/icon

export type PlasmicPricingSection3__VariantMembers = {};

export type PlasmicPricingSection3__VariantsArgs = {};
type VariantPropType = keyof PlasmicPricingSection3__VariantsArgs;
export const PlasmicPricingSection3__VariantProps =
  new Array<VariantPropType>();

export type PlasmicPricingSection3__ArgsType = {
  foreground?: React.ReactNode;
};

type ArgPropType = keyof PlasmicPricingSection3__ArgsType;
export const PlasmicPricingSection3__ArgProps = new Array<ArgPropType>(
  "foreground"
);

export type PlasmicPricingSection3__OverridesType = {
  root?: p.Flex<"div">;
  freeBox?: p.Flex<"div">;
  foreground?: p.Flex<"div">;
};

export interface DefaultPricingSection3Props {
  foreground?: React.ReactNode;
  className?: string;
}

function PlasmicPricingSection3__RenderFunc(props: {
  variants: PlasmicPricingSection3__VariantsArgs;
  args: PlasmicPricingSection3__ArgsType;
  overrides: PlasmicPricingSection3__OverridesType;
  dataFetches?: PlasmicPricingSection3__Fetches;
  forNode?: string;
}) {
  const { variants, args, overrides, forNode, dataFetches } = props;

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}
    >
      <div
        data-plasmic-name={"freeBox"}
        data-plasmic-override={overrides.freeBox}
        className={classNames(defaultcss.all, sty.freeBox)}
      />

      <p.Stack
        as={"div"}
        data-plasmic-name={"foreground"}
        data-plasmic-override={overrides.foreground}
        hasGap={true}
        className={classNames(defaultcss.all, sty.foreground)}
      >
        {p.renderPlasmicSlot({
          defaultContents: (
            <React.Fragment>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__lqJjm)}
              >
                <div className={classNames(defaultcss.all, sty.freeBox__fsLw)}>
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__gcL6O
                    )}
                  >
                    {"Pricing plans"}
                  </div>
                </div>

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__nyujl
                  )}
                >
                  {
                    "Nascetur nascetur ridiculus scelerisque adipiscing a nascetur varius sed eu a ad semper a est nec litora ante at orci rhoncus a varius auctor aliquam inceptos vestibulum ridiculus."
                  }
                </div>
              </p.Stack>

              <div className={classNames(defaultcss.all, sty.freeBox__oOlh3)}>
                <div className={classNames(defaultcss.all, sty.freeBox__veVed)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.freeBox__sK7Xz)}
                  >
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.freeBox__vj3X
                      )}
                    >
                      {"Starter"}
                    </div>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.freeBox__vHb8)}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          sty.freeBox__tNwVe
                        )}
                      >
                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.freeBox__iF4F
                          )}
                        >
                          {"$"}
                        </div>

                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.freeBox__fjKsw
                          )}
                        >
                          {"8"}
                        </div>
                      </div>

                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__yv0Fx
                        )}
                      >
                        {"/month"}
                      </div>
                    </p.Stack>
                  </p.Stack>

                  <Divider
                    className={classNames(
                      "__wab_instance",
                      sty.divider___4YycI
                    )}
                  />

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.freeBox__xaqeb)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.freeBox__fLym7)}
                    >
                      <Valueprop
                        className={classNames(
                          "__wab_instance",
                          sty.valueprop__pgWFa
                        )}
                        flatIcon={"flatIcon" as const}
                        justDescription={"justDescription" as const}
                        slot={
                          "Vestibulum mollis odio dictum ultrices facilisis molestie vestibulum"
                        }
                        slot2={
                          <Icon14Icon
                            className={classNames(
                              defaultcss.all,
                              sty.svg__jsiKo
                            )}
                            role={"img"}
                          />
                        }
                        slot22={
                          <Icon14Icon
                            className={classNames(
                              defaultcss.all,
                              sty.svg__pjv1J
                            )}
                            role={"img"}
                          />
                        }
                      />

                      <Valueprop
                        className={classNames(
                          "__wab_instance",
                          sty.valueprop__hhlu7
                        )}
                        flatIcon={"flatIcon" as const}
                        justDescription={"justDescription" as const}
                        slot={"Mus consequat a justo"}
                        slot2={
                          <Icon14Icon
                            className={classNames(
                              defaultcss.all,
                              sty.svg__pCjXw
                            )}
                            role={"img"}
                          />
                        }
                        slot22={
                          <Icon14Icon
                            className={classNames(
                              defaultcss.all,
                              sty.svg__n4ANd
                            )}
                            role={"img"}
                          />
                        }
                      />
                    </p.Stack>

                    <Button
                      colors={"white" as const}
                      extraSmallShadow={"extraSmallShadow" as const}
                      slot={
                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.freeBox__qoS1Y
                          )}
                        >
                          {"Buy starter"}
                        </div>
                      }
                    />
                  </p.Stack>
                </div>

                <div className={classNames(defaultcss.all, sty.freeBox___7Nrk)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.freeBox__ixXYn)}
                  >
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.freeBox__ppxSp
                      )}
                    >
                      {"Pro"}
                    </div>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.freeBox___6LWJ)}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          sty.freeBox__oxtOe
                        )}
                      >
                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.freeBox__dlLy
                          )}
                        >
                          {"$"}
                        </div>

                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.freeBox__kqgmb
                          )}
                        >
                          {"16"}
                        </div>
                      </div>

                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__xm8HV
                        )}
                      >
                        {"/month"}
                      </div>
                    </p.Stack>
                  </p.Stack>

                  <Divider
                    className={classNames("__wab_instance", sty.divider__podD)}
                  />

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.freeBox__mDxQm)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.freeBox__izuDq)}
                    >
                      <Valueprop
                        className={classNames(
                          "__wab_instance",
                          sty.valueprop__uL49J
                        )}
                        flatIcon={"flatIcon" as const}
                        justDescription={"justDescription" as const}
                        slot={
                          "Ligula primis mollis sem dignissim semper lectus parturient"
                        }
                        slot2={
                          <Icon14Icon
                            className={classNames(
                              defaultcss.all,
                              sty.svg__qMfpx
                            )}
                            role={"img"}
                          />
                        }
                        slot22={
                          <Icon14Icon
                            className={classNames(
                              defaultcss.all,
                              sty.svg___1PBt
                            )}
                            role={"img"}
                          />
                        }
                      />

                      <Valueprop
                        className={classNames(
                          "__wab_instance",
                          sty.valueprop__owKu7
                        )}
                        flatIcon={"flatIcon" as const}
                        justDescription={"justDescription" as const}
                        slot={
                          <div
                            className={classNames(
                              defaultcss.all,
                              defaultcss.__wab_text,
                              sty.freeBox__dfubc
                            )}
                          >
                            {"A curabitur dignissim pharetra porta suscipit"}
                          </div>
                        }
                        slot2={
                          <Icon14Icon
                            className={classNames(
                              defaultcss.all,
                              sty.svg__fsgV
                            )}
                            role={"img"}
                          />
                        }
                        slot22={
                          <Icon14Icon
                            className={classNames(
                              defaultcss.all,
                              sty.svg__dLnWm
                            )}
                            role={"img"}
                          />
                        }
                      />

                      <Valueprop
                        className={classNames(
                          "__wab_instance",
                          sty.valueprop__scbAo
                        )}
                        flatIcon={"flatIcon" as const}
                        justDescription={"justDescription" as const}
                        slot={
                          "Condimentum diam a et sapien praesent potenti torquent a eros"
                        }
                        slot2={
                          <Icon14Icon
                            className={classNames(
                              defaultcss.all,
                              sty.svg___7XTo
                            )}
                            role={"img"}
                          />
                        }
                        slot22={
                          <Icon14Icon
                            className={classNames(
                              defaultcss.all,
                              sty.svg__rEhhQ
                            )}
                            role={"img"}
                          />
                        }
                      />

                      <Valueprop
                        className={classNames(
                          "__wab_instance",
                          sty.valueprop__p4Ntf
                        )}
                        flatIcon={"flatIcon" as const}
                        justDescription={"justDescription" as const}
                        slot={
                          <div
                            className={classNames(
                              defaultcss.all,
                              defaultcss.__wab_text,
                              sty.freeBox__snFSu
                            )}
                          >
                            {"Conubia in hac eu elementum sodales"}
                          </div>
                        }
                        slot2={
                          <Icon14Icon
                            className={classNames(
                              defaultcss.all,
                              sty.svg__vzW0W
                            )}
                            role={"img"}
                          />
                        }
                        slot22={
                          <Icon14Icon
                            className={classNames(
                              defaultcss.all,
                              sty.svg__bQrou
                            )}
                            role={"img"}
                          />
                        }
                      />
                    </p.Stack>

                    <Button
                      colors={"green" as const}
                      extraSmallShadow={"extraSmallShadow" as const}
                      slot={
                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.freeBox__qzcx2
                          )}
                        >
                          {"Buy pro"}
                        </div>
                      }
                    />
                  </p.Stack>
                </div>

                <div className={classNames(defaultcss.all, sty.freeBox___83Y7)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.freeBox__uT9Rm)}
                  >
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.freeBox__scu7H
                      )}
                    >
                      {"Team"}
                    </div>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.freeBox__o7GJo)}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          sty.freeBox__iWf0R
                        )}
                      >
                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.freeBox__qjlbq
                          )}
                        >
                          {"$"}
                        </div>

                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.freeBox__hhsH1
                          )}
                        >
                          {"10"}
                        </div>
                      </div>

                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__gkv9N
                        )}
                      >
                        {"/member"}
                      </div>
                    </p.Stack>
                  </p.Stack>

                  <Divider
                    className={classNames("__wab_instance", sty.divider__uwAbq)}
                  />

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.freeBox__gkGaI)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.freeBox__jBOlk)}
                    >
                      <Valueprop
                        className={classNames(
                          "__wab_instance",
                          sty.valueprop__pkkhF
                        )}
                        flatIcon={"flatIcon" as const}
                        justDescription={"justDescription" as const}
                        slot={"Ad nam curae a potenti platea"}
                        slot2={
                          <Icon14Icon
                            className={classNames(
                              defaultcss.all,
                              sty.svg___2Rm59
                            )}
                            role={"img"}
                          />
                        }
                        slot22={
                          <Icon14Icon
                            className={classNames(
                              defaultcss.all,
                              sty.svg___6365R
                            )}
                            role={"img"}
                          />
                        }
                      />

                      <Valueprop
                        className={classNames(
                          "__wab_instance",
                          sty.valueprop___3HsQp
                        )}
                        flatIcon={"flatIcon" as const}
                        justDescription={"justDescription" as const}
                        slot={
                          "A adipiscing scelerisque pretium consectetur sem"
                        }
                        slot2={
                          <Icon14Icon
                            className={classNames(
                              defaultcss.all,
                              sty.svg__hx3Cd
                            )}
                            role={"img"}
                          />
                        }
                        slot22={
                          <Icon14Icon
                            className={classNames(
                              defaultcss.all,
                              sty.svg__dhauN
                            )}
                            role={"img"}
                          />
                        }
                      />
                    </p.Stack>

                    <Button
                      colors={"white" as const}
                      extraSmallShadow={"extraSmallShadow" as const}
                      slot={
                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.freeBox___1SPwP
                          )}
                        >
                          {"Buy team"}
                        </div>
                      }
                    />
                  </p.Stack>
                </div>
              </div>
            </React.Fragment>
          ),
          value: args.foreground
        })}
      </p.Stack>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "freeBox", "foreground"],
  freeBox: ["freeBox"],
  foreground: ["foreground"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  freeBox: "div";
  foreground: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicPricingSection3__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicPricingSection3__VariantsArgs;
    args?: PlasmicPricingSection3__ArgsType;
    overrides?: NodeOverridesType<T>;
    dataFetches?: PlasmicPricingSection3__Fetches;
  } & Omit<PlasmicPricingSection3__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicPricingSection3__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicPricingSection3__ArgProps,
      internalVariantPropNames: PlasmicPricingSection3__VariantProps
    });

    const { dataFetches } = props;

    return PlasmicPricingSection3__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicPricingSection3";
  } else {
    func.displayName = `PlasmicPricingSection3.${nodeName}`;
  }
  return func;
}

export const PlasmicPricingSection3 = Object.assign(
  // Top-level PlasmicPricingSection3 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    freeBox: makeNodeComponent("freeBox"),
    foreground: makeNodeComponent("foreground"),

    // Metadata about props expected for PlasmicPricingSection3
    internalVariantProps: PlasmicPricingSection3__VariantProps,
    internalArgProps: PlasmicPricingSection3__ArgProps
  }
);

export default PlasmicPricingSection3;
/* prettier-ignore-end */
